1. 플랫폼이란 무엇인가요?
소프트웨어 플랫폼이란 여러가지 서비스 혹은 프로그램을 동작시킬 수 있는 기반이 되는 것을 말합니다. 저는 windows, oracle, tomcat 등의 플랫폼을 사용하여 응용프로그램을 개발하였습니다.

2. Framework란 무엇입니까?
웹 프레임워크란, 웹페이지를 개발하는 과정에서 겪는 어려움을 줄이거나, 여러가지 모듈을 좀 더 쉽게 사용하기 위해 만들어진 기본개념구조입니다. 이 중에서 제가 사용한 프레임워크는 스프링 프레임워크입니다. 스프링 프레임워크의 장점은 확장성이 높다는 점입니다. 여러가지 유저 라이브러리를 사용할 수 있고, 이미 스프링에서 사용되는 라이브러리를 분리하기도 편하다는 장점이 있습니다.

3. 자바언어의 특징은 무엇입니까?
자바란, 객체지향언어의 하나로써, 제임스 고슬링을 책임자로써 개발된 컴파일언어입니다. 자바가 다른 컴파일 언어와 크게 다른 점은 개발 플랫폼에 영향을 받지 않는다는 점에 있습니다. 다른 컴파일 언어는 컴파일러가 오브젝트 코드를 생성한 후, 플랫폼에 따라 라이브러리를 링킹하여  실행파일을 만듭니다. 따라서, 플랫폼이 바뀌면 그에 따른 컴파일링 및 링킹을 새로 해야 된다는 점이 불편했습니다. 간단히 말하면 이식성이 좋지 않았습니다. 하지만, JAVA는 JVM이라는 가상머신을 이용하여 컴파일된 언어를 해석합니다. 링킹 과정을 생략하고 바로 컴파일을 하기 때문에, JVM이 현재 실행되는 플랫폼에 맞추어 동적으로 클래스 라이브러리를 로딩하기 때문에, 플랫폼에 상관없이 실행파일이 만들어집니다. 이로 인하여 현재 다양한 플랫폼에서 JAVA를 이용하여 프로그램을 만들고 있습니다.
 
4. 객체지향언어란 무엇입니까? 객채지향 언어의 장점은 무엇입니까?
객체지향언어란, 절차지향언어에서 조금 더 발전하여 문제현상을 객체로 다루는 것입니다.. 절차지향언어가 모듈의 입력과 출력을 직접 다루었다면, 객체지향언어는 매소드 방식을 통하여 모듈의 내부프로시저를 다룹니다. 객체지향언어의 특성으로는 캡슐화, 추상화, 상속성, 다형성이 있으며, 객체지향언어의 특성을 통해 코드의 재사용성을 높이고, 유지보수를 쉽게 할 수 있습니다.
 
5. 추상 클래스란 무엇입니까?
추상클래스란, 각 클래스의 공통적인 부분(변수와 메소드 포함)을 모아서 하나의 클래스로 만든것을 말합니다. 공통적인 부분을 추상클래스로 선언하고, 실제 클래스에서 그 부분을 오버라이딩(재정의)하여 사용할 수 있게 만들어 놓는 것이라고 말할 수 있습니다. 이 때, 클래스 앞에 abstract키워드를 붙여 추상클래스임을 나타내며, 추상클래스는 구체적인 정의가 되어 있지 않기 때문에 인스턴스화를 할 수 없습니다.

6. 인터페이스란 무엇입니까?
인터페이스란, 여러가지 모듈의 기능을 사용하기 위하여, 여러가지 모듈의 메소드를 받아서 사용하는 것이다. 상속과 다른 점은, 자바에서는 단일상속만 가능하기 때문에, 모든 모듈의 기능을 상속받아서 사용하려면, 부모 클래스에 모든 메소드 및 프로시저가 정의되어 있어야 하지만, 부모에 모든 기능을 담아둘 수 없고, 모듈화를 이용하여 프로그램을 만드는 편이 생산성 향상에 도움이 되기 때문에 인터페이스를 이용하여 다중상속을 받는 것처럼 여러가지 기능을 받아서 사용할 수 있습니다.
 
7.  Wrapper 클래스란 무엇입니까?
wrapper클래스란, 기본형 자료형을 객체처럼 사용하기 위하여 JDK1.5버젼에서 지원하는 클래스를 말합니다. 기본형 자료형 8가지는 객체변수가 아닌 일반변수로 사용하지만, 특별히 일반변수를 객체화시켜 사용하여야 하는 경우에 사용합니다. 

8. MVC모델이란 무엇입니까?
소프트웨어 공학에서 사용되는 소프트웨어 디자인 패턴으로, Model(백그라운드에서 동작하는 것(DB 등), View(사용자가 보게 될 결과화면), Controller(사용자로부터 받는 입력의 처리)로 나누어 프로그램을 설계하는 것을 말합니다.

9. 다형성이란 무엇입니까?
다형성이란, 하나의 프로시저 혹은 모듈이 각기 다른 상황에 맞추어 동작하도록 하는 것을 말합니다. 크게 오버로딩과 오버라이딩으로 나누어집니다.
오버로딩이란, 같은 기능을 하는 모듈에 각기 다른 매개변수를 넣어도 동작하도록 하게 하는 것을 말하며,
오버라이딩이란 부모의 모듈을 확장시키기 위해 부모의 모듈을 상속받아 그 기능을 확장시키는 것을 말합니다.
 
10. 상속이란 무엇입니까?
상속이란, 모듈을 재사용하기 위하여 부모로부터 모듈을 물려받아 새로운 기능을 작성하는 것을 말합니다. 이를 위해, 부모 클래스와 자식 클래스를 정의한 후, 오버라이딩을 통해 상속을 받게 됩니다.

11. 추상화란 무엇입니까?
추상화란, 각 모듈의 공통속성을 뽑아내서 새로운 클래스로 만드는 것입니다. 추상화된 클래스는 각 모듈에서 오버라이딩을 통해 자신이 원하는 기능에 맞게 바꾸어 사용할 수 있습니다. 이를 통해 프로그램의 재사용성을 높일 수 있습니다.
 
12. 오버라이딩이란 무엇입니까?
오버라이딩이란 객체지향 언어의 특성 중 하나인 다형성의 한 종류로써, 부모클래스로부터 상속받아 자식클래스에서 자신의 기능에 맞게 재정의하는 것입니다. 이를 통해 재사용성을 높여서 코드의 생산성을 높일 수 있습니다.
 
13. 오버로딩이란 무엇입니까?
오버로딩이란, 오버라이딩과 같이 객체지향언어의 특징 중 하나인 다형성의 한 종류로써, 같은 기능을 하는 모듈에 자료형이 다른 매개변수 혹은 개수가 다른 매개변수를 입력값으로 주어도 같은 기능을 하도록 하는 것을 말합니다. 자바에서는 예를 들어, Println함수가 있습니다. 이 함수는 결과메시지를 콘솔창에 출력하는 메소드인데, 여기에 String변수형을 넣어도, int형을 넣어도, 모두 같은 기능을 하도록 구현되어 있습니다.
 
14. Java Servlet이란 무엇입니까?
Java Servlet이란, 웹에서 발생하는 클라이언트의 요청에 대해서 동적인 처리가 가능한 하나의 클래스입니다. 웹페이지에서 요청이 발생하면 그 요청을 Servlet Container에게 전달하고, 이 Container에서 해당 요청에 대한 처리를 한 후 그 결과에 따라 클라이언트에게 응답을 주는 것을 말합니다.
이 때, Servlet와 JSP와의 차이점은, Servlet는 MVC패턴 중 Controller와의 통신, 즉 DB의 데이터를 읽어오거나 쓰는 작업의 처리에 유용합니다. 하지만, Servlet는 기본적으로 Java코드이므로, 수정된 경우 새로 컴파일 하여야 하는 단점이 존재합니다. 이와 반면에, JSP는 View에 화면을 보여주는 처리를 하는 것에 유용합니다. 즉, 자신의 요청에 대한 Servlet의 응답을 다시 화면에 보여주는 처리를 하는 데에 주로 사용됩니다.

15. 데이터베이스란 무엇입니까?
데이터베이스는 데이터베이스를 이루고 있는 구조에 따라, 데이터베이스 안에 들어가 있는 내용에 따라 분류가 가능합니다.
데이터베이스를 이루고 있는 구조에 따라 분류하자면, 계층형, 네트워크, 관계형, 객체지향형으로 나눌 수 있으며, 데이터베이스 안에 들어가 있는 내용에 따라 분류하자면 정형, 반정형, 비정형으로 나눌 수 있습니다. 저는 여기서 관계형 데이터베이스모델중 하나인 오라클을 이용하여 데이터베이스를 구성하였습니다. 관계형 데이터베이스 모델의 가장 큰 장점은 정형화된 데이터의 처리능력이 뛰어나다는 점입니다. 하지만, 정형화된 데이터베이스를 넣어야 한다는 단점도 존재합니다.

16. 기본키란 무엇입니까?
기본키(Primary Key)란, 데이터베이스에서 릴레이션을 구분할 수 있는 하나의 속성입니다. 후보키 중에서 선정되며, 유일성, 최소성을 가져야 합니다. 또한, 릴레이션을 구분해야 하기 때문에 Null값이 존재해서는 안됩니다.

17. 외래키란 무엇입니까?
외래기(Foreign key)란, 다른 테이블에 존재하는 기본키를 참조하여 자신의 테이블에 참조하는 속성들을 말합니다. 이 때, 외래키로 지정된 키 안에 집합은, 다른 테이블에 존재하는 기본키에 없는 값은 올 수 없습니다. 이를 참조 무결성이라고 합니다.

18. DDL의 개념을 설명해주세요.
DDL(Data Definition Language)란, 테이블, 뷰, 스키마, 인덱스 등의 생성, 정의변경, 삭제 등에 사용되는 데이터베이스언어입니다.  ORACLE에서는 크게 4개가 있으며, 테이블, 뷰, 스키마, 인덱스 등을 생성하는 CREATE , 테이블, 뷰, 스키마, 인덱스 등을 삭제하는 DROP , 테이블의 여러가지 정의를 변경하는 ALTER , 테이블에 들어있는 데이터만 삭제하는 TRUNCATE가 있습니다. 
 
19. DML의 개념을 설명해주세요.
DML(Data Manipulation Language)란, 테이블에 들어있는 데이터들을 생성, 수정, 삭제, 선택하는 명령어들의 집합으로, 실제 사용자가 데이터베이스의 여러가지 데이터들을 처리하기 위해 사용하는 언어입니다. 먼저, 데이터베이스안에 새로운 데이터를 생성하는 INSERT , 데이터를 수정하는 UPDATE , 데이터를 삭제하는 DELETE , 데이터를 조회하는 SELECT가 있습니다.
 
20. Inner Join, Outer Join, Corss Join이란 무엇입니까?
JOIN이란, 데이터베이스내의 여러가지 테이블에서 사용자가 원하는 데이터를 뽑아 하나의 새로운 가상 테이블을 만들어 결과를 보여주는 것을 말합니다. 2개의 테이블을 조합하여 하나의 테이블로 만드는 것이라고 생각할 수 있습니다. 이 때, 크게 3가지로 나누어집니다.
1. OUTER JOIN : 여러 테이블에서 한 쪽에는 원하는 데이터가 있고, 다른 한쪽에는 없는 경우 데이터가 있는 쪽의 테이블의 내용을 전부 출력하는 것을 말합니다.
2. INNER JOIN : 두 테이블의 공통된 키를 새로운 키로 하여 조건에 맞는 데이터를 가져오는 것입니다.
3. CROSS JOIN : 카티션 곱이라고도 하며, 두 테이블의 모든 데이터를 한꺼번에 가져오는 것입니다.
 
21. 인덱스를 생성하는 목적은 무엇입니까?
인덱스란, 테이블에서 검색과 정렬 속도를 향상시키기 위하여 테이블의 컬럼을 색인화 하는 작업을 말합니다. 또, 테이블을 TREE구조로 색인화하하여 저장합니다. 이를 통해 테이블의 검색 및 정렬속도를 향상시키고, 해당 테이블의 고유성을 강화시킬 수 있습니다. 이 때 유의해야 하는 점은 기봍키는 항상 자동으로 인덱스된다는 점입니다.

22. 정규화란 무엇입니까?
데이터베이스 정규화란, 데이터베이스에서 발생할 수 있는 각종 이상현상(Anamolies)들을 방지하기 위한 목적으로 사용됩니다. 이상 현상이란, 데이터베이스에 자료를 처리할 시 발생하는 문제점들로, 갱신이상, 삽입이상, 삭제이상이 발생하게 됩니다. 이를 방지하기 위하여 데이터베이스를 크게 6개의 정규화과정을 거쳐 논리적이고 직관적인 데이터 테이블을 구성합니다. 
1차 정규화과정은 도메인이 원자값이 아닌 것을 제거
2차 정규화과정은 부분함수 제거
3차 정규화과정은 이행적 함수 제거
강한 3차 정규화과정은 결정자이면서 후보키가 아닌 것을 제거
4차 정규화과정은 다치종속 제거
5차 정규화과정은 조인종속성 제거
로 이루어집니다.

23. 트랜잭션이란 무엇입니까?
트랜잭션이란, 데이터베이스에서 최소단위 기능을 수행하는 것입니다. 이 때, 데이터베이스 시스템은 각각의 트랜젝션에 대해서 원자성(Atomicity), 일관성(Consistency), 독립성(Isolation), 영구성(Durability)을 보장합니다. 
원자성은 하나의 트랜잭션은 완전히 수행되거나 아예 수행되지 않아야 한다는 것이고
일관성은 하나의 트랜잭션은 온전히 하나의 기능을 한다는 것이고
독립성은 하나의 트랜잭션의 결과가 다른 트랜잭션에 영향을 주지 않는 것이고
영구성은 하나의 트랜잭션의 결과가 시간이 지나도 보장된다는 것을 말합니다.

24. 스키마란 무엇입니까?
스키마란, 데이터베이스를 구성하는 개체와 속성 그리고 그 사이의 관계, 데이터 값에 대한 제약조건 등을 정의해 놓은 것을 말합니다. 이 때, 사용자의 관점에 따라 개념 스키마, 내부 스키마, 외부 스키마로 나누어 지는데, 외부 스키마는 사용자 관점에서 데이터베이스를 바라봤을 때의 정의를 말하며, 개념스키마는 데이터베이스 관리자(DBA)의 관점에서 바라본 것입니다. 마지막으로 내부 스키마는 저장장치의 관점에서 바라본 것을 말합니다. 이 스키마들은 데이터사전에 저장되며, 다른 말로 메타데이터라고도 말합니다. 
 
25. 오라클에서 Undo Data의 의미는 무엇입니까?
데이터베이스에서 Undo란, 어떠한 트랜잭션이 실행 되기 전 상태로 돌리는 것을 말합니다. 만약에, 트랜잭션이 실행되는 도중 문제가 발생했을 시, 데이터베이스의 데이터를 해당 트랜잭션이 실행되기 전 상태로 돌리는 것을 의미합니다. 이를 통해 Undo는 Rollback, 데이터의 일관성 유지, 데이터의 복구기능을 수행하게 됩니다. 이 때, 해당 트랜잭션이 실행되기 전 데이터를 Undo Data라고 합니다. 

26. 오라클에서 Redo Data의 의미는 무엇입니까?
Redo는 데이터베이스에서 트랜잭션이 실행되다가 오류가 발생한 경우, 그 트랜잭션을 다시 실행하는 것을 말합니다. Undo와의 차이는 Undo는 여러가지 트랜잭션이 실행되는 경우 문제가 발생하면 그 트랜잭션들이 전부 실행되기 전 상태로 돌아가지만, Redo는 그 트랜잭션들을 다시 실행하게 됩니다. 이를 좀 더 쉽게 설명하자면 다음과 같습니다.
만약, 아래와 같은 작업이 발생되다가 트랜잭션의 오류가 발생했다고 가정해봅시다. 
update t1
set no = no+1
where id = 1;
이 때, 세션이 복구되는 과정에서 redo는 다음과 같은 과정을 반복해서 수행합니다. 
update t1
set no = no+1
where id =1;
하지만 undo는 아래와 같은 작업을 수행하게 되는 것입니다. 
update t1
set no = no-1
where id = 1;
Redo의 주요 기능은 데이터 복구기능입니다. 
 
27. 오라클의 논리적 구조는 무엇입니까?
데이터베이스의 논리적 구조에는 크게 4가지 요소가 있습니다. 테이블 스페이스(Tablespace), 세그먼트(Segment), 블록(Datablock), 확장영역(Extends)입니다.
1. 테이블 스페이스(Tablespace) : 테이블스페이스란, 하나의 데이터베이스를 구성하는 여러가지 논리적 구조들을 모아놓은 것입니다. 기본적으로 System(Data Dictionary), UndoTBS(Undo 및 Rollback을 위해 사용자의 DML로그를 모아둠), Temp(사용자의 명령들을 정렬해둠) 3개의 테이블스페이스를 가지고 있습니다. 물론 새로운 테이블스페이스의 추가도 가능합니다.
2. 세그먼트(Segment) : 세그먼트는 데이터베이스 내에서 생성되는 모든 객체(테이블, 인덱스, 뷰 등)을 의미합니다.
3. 블록(Datablock) : 블록이란 데이터베이스의 가장 작은 단위의 저장단위입니다. 블록 단위로 저장하여 데이터의 효과적인 저장과 관리가 쉬워지게 되었습니다. 
4. 확장영역(Extends) : 확장영역이란, 블록단위의 저장데이터들을 모아놓은 것이라고 말할 수 있습니다. 이 때, 하나의 테이블이 생성되면 하나의 확장영역이 생성되고, 만약에 계속 데이터가 추가되면 이 확장영역이 늘어나는 방식으로 테이블의 크기가 늘어난다는 특징이 있습니다. 

28. 오라클 데이터베이스를 구성하는 주요 파일들을 말해주세요.
오라클 데이버테이스를 구성하는 주요 파일로는 데이터가 저장되는 데이터파일, 스키마 등이 저장되는 컨트롤 파일, 리두 로그파일, 기타 파라미터 파일, 벡업 파일, 아카이브 파일 등이 있습니다.

29. 오라클 데이터베이스를 운영하기 위한 두 가지 모드는 무엇입니까?
 오라클 데이터베이스를 운영하는 방법에는 크게 2가지 방법이 있습니다. Archive Log Mode와 No-Archive Log Mode 입니다. 
No-Archive Log Mode는 redo로그파일을 최소 3개정도 가지고 있으면서 redo로그파일을 돌려 쓰는 방식입니다. 이 때, redo로그파일의 크기를 넘어가는 데이터가 들어오게 되면 제일 처음의 기록이 삭제되기 때문에, 온전한 redo작업을 할 수 없다는 단점이 있습니다.
이 단점을 해결하기 위하여 Archive Log Mode를 사용합니다. Archive Log Mode는 로그파일을 새로 덮어써야 되는 상황이 발생하면 덮어쓰기 전에 파일을 다른 저장소에 복사해두고 덮어쓰는 방식을 말합니다. 이를 통해 예전 redo작업도 수행할 수 있는 장점이 있습니다. 이를 통해 데이터무결성을 보장할 수 있습니다. 

30. 오라클의 데이터 딕셔너리란 무엇입니까?
데이터 사전이란 데이터베이스내에서 사용되는 여러가지 정보들에 대한 것들을 모아놓은 것들을 말합니다. 대표적으로 여러가지 스키마, 사용자 권한, 내부공간의 구조정보와 같은 데이터베이스의 전반적인 정보들을 모두 담아놓은 것을 말합니다. 또한, 이 데이터사전도 테이블로써 데이터베이스 내에 저장됩니다. 
 
31. 오라클의 벡업 방법에는 무엇이 있습니까?
오라클에서 사용하는 벡업의 종류는 Hot Backup, Rman Backup, Cold Backup, Export Backup이 있습니다. 데이터베이스를 이용하는 시스템의 성격에 따라 각 데이터베이스 백업방식을 적절히 사용해야 합니다.
원론적으로, 벡업의 종류에는 크게 3가지가 있습니다. 전체 백업, 증분 백업, 차등 백업이 있습니다. 
전체 백업은 데이터의 변경 유무에 관계없이 전체 데이터를 복사하며, 증분 백업은 시간을 기준으로 하여 특정 시간주기마다 백업을 합니다. 마지막으로 차등 백업은 변경된 데이터를 백업하는 방식입니다

32. 허브란 무엇입니까?
허브란, 네트워크 통신장비 중 하나로, 여러대의 컴퓨터와 네트워크를 별형(Star)망구조로 연결하는 장비입니다. 이를 통해 컴퓨터와 네트워크간의 통신이 가능해집니다. 하지만, 네트워크에서 데이터가 들어오면 같은 허브에 연결된 여러 컴퓨터에 해당 데이터가 동시에 전해지는 단점이 있습니다.

33. 라우터는 무엇입니까?
라우터란, 허브와 스위치를 통해 전달된 데이터를 전송하기 위하여 경로지정을 하는 장치입니다. 데이터의 출발지에서 데이터의 도착점까지 가장 빠르고 효과적인 전송경로를 결정하는 역할을 하는 장치입니다. 3계층을 담당하고 있습니다.

34. 스위치는 무엇입니까?
허브와 스위치의 기본적인 하는일은 같습니다. 허브와 스위치 모두 여러 대의 컴퓨터를 하나의 네트워크로 연결하는 장비입니다. 다만, 허브와 스위치가 다른 점은 허브는 들어오는 네트워크신호를 연결된 모든 컴퓨터에 전송하는 반면 스위치는 특정 포트로 전송한다는 점이 다릅니다.

35. OSI 7계층이란 무엇입니까?
OSI7계층이란, 1984년에 여러 정보통신 장비들의 호환성을 위해 ISO(International Organization for Standardization)에서 제안한 참조모델입니다. 이를 통해 여러가지 통신 프로토콜 및 기술들이 나오게 되었습니다. 대표적으로, TCP/IP통신은 OSI를 바탕으로 중요한 몇가지 계층을 나누어 개발되었습니다. 게다가, 네트워크 통신을 계층별로 나누어 놓음으로써, 유지보수 및 표준화를 더욱 쉽게 할 수 있다는 장점이 있습니다. 이 때, 각 레이어는 다음과 같습니다.
OSI 7계층은 아래서부터 순서대로 물리 계층(Physical Layer), 데이터링크 계층(DataLink Layer), 네트워크 계층(Network Layer), 전송계층(Transport Layer), 세션계층(Session Layer), 표현 계층(Presentation Layer), 응용 계층(Application Layer)로 나누어 집니다.

36. 쿠키란 무엇입니까?
쿠키란, 네트워크 통신을 할 때 클라이언트 pc가 이용한 데이터를 보관하는 자료 입니다. 같은 브라우저를 방문할 때, 브라우저의 신속성을 위해 쿠키를 읽어 옴으로써 해당 브라우저에 접속합니다. 따라서 빠른 정보의 처리가 가능하지만, 이로 인하여 보안에 취약하다는 단점이 있습니다.

37. 세션이란 무엇입니까?
새션이란, 클라이언트가 서버에 접속할 때 서버에서 클라이언트의 사용정보를 가지고 있는 자료를 말합니다. 보통 클라이언트와 서버가 연결되어 있을 때에만 자료를 저장하며, 연결이 끊어지면 그 즉시 새션정보는 날아가게 됩니다. 따라서 쿠키보다는 보안성이 좋지만, 다량의 클라이언트가 동시에 접속할 시 서버에 과부하를 줄 수 있다는 단점이 있습니다.

38. WAS란 무엇입니까?
WAS(Web Application Server)란, 웹 브라우저에서 들어온 여러가지 서비스 요청을 처리하고, 그 결과를 다시 웹 서버로 보내주는 역할을 하는 어플리케이션입니다. 대표적으로 DB안에 자료를 가져온다던지, 트랜잭션의 수행, 사용자 관리 등등 다양한 기능을 제공하는 소프트웨어라고 정의할 수 있습니다. 또한, Web Server와의 가장 큰 차이는 웹 서버는 html페이지 등을 이용하여 웹 서버에 들어가는 이미지 파일, html문서 등을 제공하지만, WAS는 여러가지 요청등을 처리하는 소프트웨어라는 점입니다. 따라서, MVC디자인패턴에서 View를 구성하는 것은 웹서버이고, Controller의 기능은 WAS가 수행한다고 할 수 있습니다.
 
39. 웹 서버란 무엇입니까?
Web Server란, HTTP프로토콜을 사용하여 웹 페이지를 클라이언트에게 제공하는 것을 말합니다. VIew모델의 표현방식이라고 할 수 있습니다. HTML, 이미지, 베너 등과 같은 정적인 것들을 화면에 보여주는 역할을 하게 됩니다. 대표적으로는 아파치가 있습니다. 
 
40. Tomcat이란 무엇입니까?
Tomcat이란, Apache(아파치)를 이용하여 만든 WAS(Web Application Server)의 하나로, 주로 JSP와 같은 동적 컨텐츠를 처리하여 Web Server에게 전달하는 역할을 합니다. 

41. 리눅스란 무엇입니까?
리눅스란, 오픈소스를 기반으로 만들어진 운영체제입니다. 즉, 프리웨어 기반으로 만들어진 운영체제이며, 다중 사용자(Multi User), 멀티테스킹(Multitasking)을 지원합니다. 또한, 다른 운영체제에 맞게 이식할 수 있는 여러가지 프레임워크를 지원하고 있으며, 여러가지 네트워킹에 유리합니다. 
종류로는 Radhat 계열의 CentOS, Debian 계열의 Ubuntu가 있습니다. Reahat은 설치가 쉬운 반면, 여러가지 패키지들을 유연하게 처리하지 못하는 단점이 있습니다. 하지만, Debian은 서버의 안정성이 높고 여러가지 패키지들을 사용할 수 있지만, 패키지의 업데이트가 느리다는 단점이 있습니다. 
 